#!/bin/bash

OBJ=$1 ; shift
SYM=$1 ; shift
PREFIX=$@

# hack
#PREFIX="--prefix=`pwd` --prefix-strip=3"
#PREFIX="--prefix=`pwd` --prefix-strip=5"

if test -z "${OBJ}" -o -z "${SYM}" ; then
	echo "syntax:"
	echo "\t$0 module symbol[+offset]"
	echo "example:"
	echo "\t$0 driver.o bad_bad_symbol+0x8b"
	exit 1
fi

SYM=${SYM%/*}
OFS="${SYM#*+}"
[ "$SYM" = "$OFS" ] && OFS=0
SYM=${SYM%+*}

#echo >&2 "SYM=$SYM"
#echo >&2 "OFS=$OFS"

if ! test -r ${OBJ} ; then
	echo "module '${OBJ}' cannot be read" >&2
	exit 1
fi

range=( $(objdump -t ${OBJ} | awk '
	BEGIN {
		l[0] = 0
	}
	$6 == "'"$SYM"'" && $4 == ".text" {
		s[0]=strtonum("0x"$1)
		l[0]=strtonum("0x"$5)
	}
	$6 ~ "'"$SYM"'" && $4 == ".text.unlikely" {
		s[1]=strtonum("0x"$1)
		l[1]=strtonum("0x"$5)
	}
	END {
		for (i in l) {
			if (l[i]) {
				e=s[i]+l[i]
				printf "%x %x\n", s[i], e
				exit
			}
		}
	}') )

echo "range=${range[*]}"

if [ ${#range[@]} != 2 ] ; then
	echo "cannot find symbol ${SYM} in ${OBJ}; range='${range[*]}'" >&2
	exit 1
fi

options="--start-address=0x${range[0]} --stop-address=0x${range[1]}"

base=${range[0]}
[ ${base:0:2} = 0x ] || base=0x$base
[ ${OFS:0:2} = 0x ] || OFS=0x${OFS:-0}
offset=$( printf '%x' $(( ${OFS} + $base )) )

cmd="objdump -S -l $PREFIX ${OBJ} ${options}"

echo ">>> ${OBJ} ${SYM} +${OFS} (${range[*]}) ${offset} <<<"
echo ">>> $cmd <<<"

if [ -t 0 ] && [ -t 1 ] ; then
	$cmd | vim -c "/^ \+${offset}:.*$" -R -
else
	$cmd | sed -e "s/^ \{,2\}\( *${offset}:.*\)$/->\1      ******/;"
fi

